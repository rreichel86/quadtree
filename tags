!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
1	src/helpers.for	/^1     if(ior.gt.0) then$/;"	l	subroutine:pconst	file:
1	src/helpers.for	/^1     nex = 0$/;"	l	subroutine:setval	file:
1	src/main.f90	/^1           call pintio(ior,yyy,8)$/;"	l	subroutine:readInputFile	file:
10	src/helpers.for	/^10    if(let(1:1).eq.' '.or.ichar(let(1:1)).eq.0) then$/;"	l	subroutine:pconst	file:
10	src/helpers.for	/^10    xs(i:i) = xss(i)$/;"	l	subroutine:pinval	file:
100	src/helpers.for	/^100                 continue$/;"	l	subroutine:parexp	file:
100	src/helpers.for	/^100     if(y(i+n1).eq.' ') then$/;"	l	subroutine:just	file:
100	src/helpers.for	/^100   continue$/;"	l	function:ipos	file:
100	src/helpers.for	/^100   continue$/;"	l	function:pcomp	file:
100	src/helpers.for	/^100   continue$/;"	l	subroutine:acheck	file:
100	src/helpers.for	/^100   continue$/;"	l	subroutine:evalex	file:
100	src/helpers.for	/^100   continue$/;"	l	subroutine:pcheck	file:
100	src/helpers.for	/^100   continue$/;"	l	subroutine:pevpak	file:
100	src/helpers.for	/^100   continue$/;"	l	subroutine:setval	file:
100	src/helpers.for	/^100   errco = .true.$/;"	l	subroutine:pinval	file:
100	src/helpers.for	/^100   if (ior.gt.0)  then$/;"	l	subroutine:pintio	file:
1000	src/Qtree.f90	/^1000    format(i6','f32.16','f32.16)$/;"	l	subroutine:QtreeMeshSR	file:
1000	src/Qtree_module.f90	/^1000    format(i6','i6','i6','i6,','i6','i6','i6','i6,','i6','i6','i6','i6,','i6','i6','i6','i6)$/;"	l	subroutine:connectivity	file:
1000	src/helpers.for	/^ 1000 format(75a1)$/;"	l	subroutine:setval	file:
1000	src/helpers.for	/^ 1000 format(a2,76a1)$/;"	l	subroutine:pconst	file:
1000	src/helpers.for	/^1000  format(201a1)$/;"	l	subroutine:dinput	file:
1000	src/helpers.for	/^1000  format(a)$/;"	l	subroutine:pintio	file:
1000	src/helpers.for	/^1000  format(f21.0)$/;"	l	subroutine:pinval	file:
1000	src/main.f90	/^        1000 format (5x,'Please enter input file name: ',$) $/;"	l	program:quadtree_main	file:
1010	src/main.f90	/^            1010 format (5x,'The input file mame is: ', A)$/;"	l	program:quadtree_main	file:
1020	src/main.f90	/^            1020 format(a4)$/;"	l	subroutine:readInputFile	file:
1070	src/main.f90	/^        1070 format(5x,'Error opening file: iostat =', i6) $/;"	l	subroutine:readInputFile	file:
1080	src/main.f90	/^    1080 format(5x,'Type available COMMAND to continue:'\/ &$/;"	l	program:quadtree_main	file:
1081	src/main.f90	/^        1081 format(\/5x,'MPLOT',' - Plot Quadtree Mesh in MATLAB '\/ &$/;"	l	program:quadtree_main	file:
1082	src/main.f90	/^    1082 format(3x,'> ',$)$/;"	l	program:quadtree_main	file:
1083	src/main.f90	/^    1083 format(a5)$/;"	l	program:quadtree_main	file:
110	src/helpers.for	/^110                 continue$/;"	l	subroutine:parexp	file:
110	src/helpers.for	/^110         continue$/;"	l	subroutine:evalex	file:
110	src/helpers.for	/^110         nl = n1 + i - j$/;"	l	subroutine:just	file:
110	src/helpers.for	/^110   continue$/;"	l	subroutine:setval	file:
110	src/helpers.for	/^110   do 150 i = 1,nlc$/;"	l	subroutine:acheck	file:
1100	src/main.f90	/^        1100 format(5x,'Undefined command')$/;"	l	program:quadtree_main	file:
12	src/helpers.for	/^12    y(i:i) = yy(i)$/;"	l	subroutine:dcheck	file:
120	src/helpers.for	/^120       continue$/;"	l	subroutine:parexp	file:
120	src/helpers.for	/^120     continue$/;"	l	subroutine:evalex	file:
125	src/helpers.for	/^125       continue$/;"	l	subroutine:parexp	file:
130	src/helpers.for	/^130         continue$/;"	l	subroutine:evalex	file:
130	src/helpers.for	/^130   continue$/;"	l	subroutine:parexp	file:
140	src/helpers.for	/^140     continue$/;"	l	subroutine:evalex	file:
140	src/helpers.for	/^140   continue$/;"	l	subroutine:pfuncs	file:
150	src/helpers.for	/^150   continue$/;"	l	subroutine:acheck	file:
150	src/helpers.for	/^150   if(ior.lt.0) then$/;"	l	subroutine:setval	file:
151	src/helpers.for	/^151     read (*,1000,err=152,end=153) xt$/;"	l	subroutine:setval	file:
152	src/helpers.for	/^152     call  errclr ('SETVAL')$/;"	l	subroutine:setval	file:
153	src/helpers.for	/^153     call  endclr ('SETVAL',xt)$/;"	l	subroutine:setval	file:
154	src/helpers.for	/^154     write(iow,2002) xt$/;"	l	subroutine:setval	file:
160	src/helpers.for	/^160       continue$/;"	l	subroutine:evalex	file:
160	src/helpers.for	/^160     continue$/;"	l	subroutine:setval	file:
1999	src/Qtree.f90	/^1999    format(\/4x,'Q T R E E  M E S H')$/;"	l	subroutine:QtreeMeshSR	file:
200	src/helpers.for	/^ 200    write(iow,2000) nn,y(1:nn*15)$/;"	l	subroutine:dcheck	file:
200	src/helpers.for	/^ 200  call errclr('PCHARR')$/;"	l	subroutine:pcharr	file:
200	src/helpers.for	/^200   continue$/;"	l	subroutine:acheck	file:
200	src/helpers.for	/^200   continue$/;"	l	subroutine:pcheck	file:
200	src/helpers.for	/^200   ipos = n$/;"	l	function:ipos	file:
2000	src/Qtree.f90	/^2000    format(5x,'Total Time            =',f10.3,' seconds')   $/;"	l	subroutine:QtreeMeshSR	file:
2000	src/Qtree_module.f90	/^2000 format(2f22.16)$/;"	l	subroutine:QtrPrintLeaves	file:
2000	src/helpers.for	/^ 2000 format (' ** ERROR in ',a6,' ** end of file encountered')$/;"	l	subroutine:endclr	file:
2000	src/helpers.for	/^ 2000 format(' Incorrect statement - reinput ')$/;"	l	subroutine:pcheck	file:
2000	src/helpers.for	/^ 2000 format(5x,'Parameter ',a1,a1,' = ',e15.8)$/;"	l	subroutine:pconst	file:
2000	src/helpers.for	/^2000  format(' ** ERROR ** too many items requested, limit = 16')$/;"	l	subroutine:dinput	file:
2000	src/helpers.for	/^2000  format(\/' *ERROR* attempting to input',i3,' value(s).',$/;"	l	subroutine:dcheck	file:
2000	src/main.f90	/^2000 format('feap')$/;"	l	subroutine:writeFeapInputFile	file:
2000	src/main.f90	/^2000 format(i6,2f32.16)$/;"	l	subroutine:writeInputFileForMFEM	file:
2001	src/helpers.for	/^ 2001 format('   No.',i3,'>',a1,' = ',74a1)$/;"	l	subroutine:pcheck	file:
2001	src/helpers.for	/^ 2001 format(2x,a1,' = ',74a1\/'   >',$)$/;"	l	subroutine:setval	file:
2001	src/helpers.for	/^ 2001 format(\/'  p a r a m e t e r   v a l u e s')$/;"	l	subroutine:pconst	file:
2002	src/helpers.for	/^ 2002 format('  Correction:>',75a1)$/;"	l	subroutine:setval	file:
2002	src/helpers.for	/^2002  format (' ** ERROR in ',a6,' ** reinput last record')$/;"	l	subroutine:errclr	file:
2010	src/main.f90	/^2010 format(2i6)$/;"	l	subroutine:writeInputFileForMFEM	file:
2020	src/main.f90	/^2020 format(3i6)$/;"	l	subroutine:writeInputFileForMFEM	file:
210	src/helpers.for	/^210     continue$/;"	l	subroutine:pcheck	file:
210	src/helpers.for	/^210   continue$/;"	l	subroutine:acheck	file:
3000	src/helpers.for	/^ 3000 format(' Use "list" to give current values - <CR> to exit'\/$/;"	l	subroutine:pconst	file:
3000	src/main.f90	/^3000 format(\/,'coor')$/;"	l	subroutine:writeFeapInputFile	file:
3010	src/main.f90	/^3010 format(i6,',,',f22.16,',',f22.16)$/;"	l	subroutine:writeFeapInputFile	file:
40	src/helpers.for	/^40      continue$/;"	l	subroutine:setval	file:
4000	src/main.f90	/^4000 format(\/,'elem')$/;"	l	subroutine:writeFeapInputFile	file:
4010	src/main.f90	/^4010 format(i6,',',i6,',')$/;"	l	subroutine:writeFeapInputFile	file:
4020	src/main.f90	/^4020 format(i6,',')$/;"	l	subroutine:writeFeapInputFile	file:
4030	src/main.f90	/^4030 format(i6)$/;"	l	subroutine:writeFeapInputFile	file:
50	src/helpers.for	/^  50  Y(I:I) = YY(I)$/;"	l	subroutine:pintio	file:
50	src/helpers.for	/^50            continue$/;"	l	subroutine:parexp	file:
50	src/helpers.for	/^50      continue$/;"	l	subroutine:setval	file:
50	src/helpers.for	/^50      d(n) = 0.0d0$/;"	l	subroutine:dinput	file:
50	src/helpers.for	/^50    continue$/;"	l	subroutine:dcheck	file:
5000	src/main.f90	/^5000 format(\/,'mate')$/;"	l	subroutine:writeFeapInputFile	file:
51	src/helpers.for	/^51    if(ior.gt.0) then$/;"	l	subroutine:dinput	file:
52	src/helpers.for	/^52    if(lsave) write(lfile,1000) xxx$/;"	l	subroutine:dinput	file:
60	src/helpers.for	/^ 60   continue$/;"	l	subroutine:dcheck	file:
60	src/helpers.for	/^60    continue$/;"	l	subroutine:dinput	file:
60	src/helpers.for	/^60    do 100 i = 1,75$/;"	l	subroutine:setval	file:
6000	src/main.f90	/^6000 format(\/,'end')$/;"	l	subroutine:writeFeapInputFile	file:
70	src/helpers.for	/^70    no = 1$/;"	l	subroutine:dinput	file:
7000	src/main.f90	/^7000 format('inte')$/;"	l	subroutine:writeFeapInputFile	file:
80	src/helpers.for	/^80    continue$/;"	l	subroutine:dinput	file:
8000	src/main.f90	/^8000 format('stop')$/;"	l	subroutine:writeFeapInputFile	file:
90	src/helpers.for	/^90    if(xxx(n).eq.' '.or.xxx(n).eq.',') then$/;"	l	subroutine:dinput	file:
901	src/helpers.for	/^901   call  errclr ('DINPUT')$/;"	l	subroutine:dinput	file:
901	src/helpers.for	/^901   call  errclr ('PCONST')$/;"	l	subroutine:pconst	file:
901	src/helpers.for	/^901   call  errclr ('PINTIO')$/;"	l	subroutine:pintio	file:
902	src/helpers.for	/^902   call  endclr ('DINPUT',xxx(1))$/;"	l	subroutine:dinput	file:
902	src/helpers.for	/^902   call  endclr ('PCONST',let)$/;"	l	subroutine:pconst	file:
902	src/helpers.for	/^902   call  endclr ('PINTIO',x)$/;"	l	subroutine:pintio	file:
92	src/helpers.for	/^92        n = n + 1$/;"	l	subroutine:dinput	file:
Boundary	src/Qtree_module.f90	/^    type(point) :: Boundary(/;"	k	type:Qtree
HEAD	src/Qtree_module.f90	/^    type(QtreeNode), pointer :: HEAD /;"	k	type:QtreeList
HowManyPoints	src/Qtree.f90	/^subroutine HowManyPoints(/;"	s
HowManySeeds	src/Qtree.f90	/^subroutine HowManySeeds(/;"	s
Merge	src/SortSearch_module.f90	/^subroutine Merge(/;"	s	module:SortSearch_module
MergeSort	src/SortSearch_module.f90	/^recursive subroutine MergeSort(/;"	s	module:SortSearch_module
MergeSortSR	src/SortSearch_module.f90	/^subroutine MergeSortSR(/;"	s	module:SortSearch_module
MergeSort_2	src/SortSearch_module.f90	/^recursive subroutine MergeSort_2(/;"	s	module:SortSearch_module
Merge_2	src/SortSearch_module.f90	/^subroutine Merge_2 /;"	s	module:SortSearch_module
NE	src/Qtree_module.f90	/^    type (Qtree), pointer :: NE /;"	k	type:Qtree
NW	src/Qtree_module.f90	/^    type (Qtree), pointer :: NW /;"	k	type:Qtree
OBJPATH	Makefile	/^OBJPATH= .\/obj$/;"	m
Q	src/Qtree_module.f90	/^    type (Qt/;"	k	type:QtreePtr
Q	src/Qtree_module.f90	/^    type(Qt/;"	k	type:QtreeNode
QIntrsPts	src/Qtree_module.f90	/^   recursive subroutine QIntrsPts(/;"	s	module:Qtree_module
QsDelete	src/Qtree_module.f90	/^     recursive subroutine QsDelete(/;"	s	module:Qtree_module
Qtr2List	src/Qtree_module.f90	/^    recursive subroutine Qtr2List(/;"	s	module:Qtree_module
QtrBalance	src/Qtree_module.f90	/^    subroutine QtrBalance(/;"	s	module:Qtree_module
QtrDataReset	src/Qtree_data.f90	/^        subroutine QtrDataReset(/;"	s	module:Qtree_data
QtrDelete	src/Qtree_module.f90	/^    subroutine QtrDelete(/;"	s	module:Qtree_module
QtrInit	src/Qtree_module.f90	/^     subroutine QtrInit(/;"	s	module:Qtree_module
QtrInputReset	src/Qtree_input.f90	/^        subroutine QtrInputReset(/;"	s	module:Qtree_input
QtrPrintLeaves	src/Qtree_module.f90	/^    recursive subroutine QtrPrintLeaves(/;"	s	module:Qtree_module
QtrRefNeighbourQ	src/Qtree_module.f90	/^    subroutine QtrRefNeighbourQ(/;"	s	module:Qtree_module
QtrRefine	src/Qtree_module.f90	/^    subroutine QtrRefine(/;"	s	module:Qtree_module
QtrReset	src/Qtree_module.f90	/^    subroutine QtrReset(/;"	s	module:Qtree_module
QtrSearchNeighbourQ	src/Qtree_module.f90	/^    subroutine QtrSearchNeighbourQ(/;"	s	module:Qtree_module
QtrSubdivide	src/Qtree_module.f90	/^    recursive subroutine QtrSubdivide(/;"	s	module:Qtree_module
QtrSubdivideNS	src/Qtree_module.f90	/^    recursive subroutine QtrSubdivideNS(/;"	s	module:Qtree_module
Qtree	src/Qtree_module.f90	/^type Qtree$/;"	t	module:Qtree_module
QtreeList	src/Qtree_module.f90	/^type QtreeList$/;"	t	module:Qtree_module
QtreeMeshRefineSR	src/Qtree.f90	/^subroutine QtreeMeshRefineSR(/;"	s
QtreeMeshSR	src/Qtree.f90	/^subroutine QtreeMeshSR(/;"	s
QtreeNode	src/Qtree_module.f90	/^type QtreeNode$/;"	t	module:Qtree_module
QtreePtr	src/Qtree_module.f90	/^type QtreePtr$/;"	t	module:Qtree_module
Qtree_data	src/Qtree_data.f90	/^module Qtree_data$/;"	m
Qtree_input	src/Qtree_input.f90	/^module Qtree_input$/;"	m
Qtree_module	src/Qtree_module.f90	/^module  Qtree_module$/;"	m
Quadtree	src/main.f90	/^    type (Qtree), pointer :: Quadtree$/;"	v	program:quadtree_main
SE	src/Qtree_module.f90	/^    type (Qtree), pointer :: SE /;"	k	type:Qtree
SW	src/Qtree_module.f90	/^    type (Qtree), pointer :: SW /;"	k	type:Qtree
SortSearch_module	src/SortSearch_module.f90	/^module  SortSearch_module$/;"	m
TAIL	src/Qtree_module.f90	/^    type(QtreeNode), pointer :: TAIL /;"	k	type:QtreeList
acheck	src/helpers.for	/^      subroutine acheck(/;"	s
append_	src/Qtree_module.f90	/^    subroutine append_(/;"	s	module:Qtree_module
array_to_point	src/Point_Module.f90	/^    subroutine  array_to_point(/;"	s	module:point_module
array_to_vector	src/Vector_Module.f90	/^        subroutine  array_to_vector(/;"	s	module:vector_module
baseList	Makefile	/^baseList = src\/main.for$/;"	m
baseObj	Makefile	/^baseObj = $(baseList:.for=.o)$/;"	m
binarySearch	src/SortSearch_module.f90	/^recursive function binarySearch /;"	f	module:SortSearch_module
binarySearch_2	src/SortSearch_module.f90	/^subroutine binarySearch_2 /;"	s	module:SortSearch_module
binaryTransformation_2	src/Qtree_module.f90	/^    subroutine binaryTransformation_2(/;"	s	module:Qtree_module
binaryTransformation_4	src/Qtree_module.f90	/^    subroutine binaryTransformation_4(/;"	s	module:Qtree_module
calcLim	src/Qtree_module.f90	/^    integer function calcLim(/;"	f	module:Qtree_module
cc	src/main.f90	/^    character cc*/;"	v	program:quadtree_main
center	src/Geom_Module.f90	/^        type(point) :: center$/;"	k	type:polygon
cmsg	src/main.f90	/^    character(len=100) :: cmsg$/;"	v	program:quadtree_main
cnt	src/main.f90	/^    integer cnt,/;"	v	program:quadtree_main
codat	src/module.for	/^      module codat /;"	m
coflg	src/module.for	/^      logical coflg$/;"	v	module:codat
commandArg	src/main.f90	/^    character(len=128) commandArg$/;"	v	program:quadtree_main
connect_h_neighbor	src/Qtree_module.f90	/^    subroutine connect_h_neighbor(/;"	s	module:Qtree_module
connect_h_seeds	src/Qtree_module.f90	/^    subroutine connect_h_seeds(/;"	s	module:Qtree_module
connectivity	src/Qtree_module.f90	/^    recursive subroutine connectivity(/;"	s	module:Qtree_module
containsPoint	src/Qtree.f90	/^logical function containsPoint(/;"	f
containsPoint_	src/Qtree_module.f90	/^    logical function containsPoint_(/;"	f	module:Qtree_module
conval	src/module.for	/^      module conval /;"	m
coordinates	src/Qtree_module.f90	/^    recursive subroutine coordinates(/;"	s	module:Qtree_module
countPoints_	src/Qtree_module.f90	/^    subroutine countPoints_(/;"	s	module:Qtree_module
counter	src/Qtree_data.f90	/^    integer :: num_node, num_elem, counter$/;"	v	module:Qtree_data
cstat	src/main.f90	/^    integer :: cstat,/;"	v	program:quadtree_main
data_seeds	src/Qtree_input.f90	/^    logical :: data_seeds$/;"	v	module:Qtree_input
dcheck	src/helpers.for	/^      subroutine dcheck(/;"	s
debug_zhl	src/Qtree_data.f90	/^    integer :: debug_zhl$/;"	v	module:Qtree_data
dinput	src/helpers.for	/^      subroutine dinput(/;"	s
dot_product	src/Vector_Module.f90	/^       function dot_product(/;"	f	module:vector_module
elements	src/Qtree_data.f90	/^    integer, allocatable :: elements(/;"	v	module:Qtree_data
ellipse	src/Qtree.f90	/^    subroutine ellipse /;"	s
elm_typ_ma	src/Qtree_data.f90	/^    integer, allocatable :: elm_typ_ma(/;"	v	module:Qtree_data
endclr	src/helpers.for	/^      subroutine endclr /;"	s
equal_to	src/Point_Module.f90	/^    function equal_to /;"	f	module:point_module
errchk	src/module.for	/^      module errchk /;"	m
errck	src/module.for	/^      logical         errck$/;"	v	module:errchk
errclr	src/helpers.for	/^      subroutine    errclr /;"	s
estat	src/main.f90	/^    integer :: cstat, estat$/;"	v	program:quadtree_main
evalex	src/helpers.for	/^      subroutine evalex(/;"	s
exists	src/main.f90	/^    logical exists$/;"	v	program:quadtree_main
father	src/Qtree_module.f90	/^    type (Qtree), pointer :: father /;"	k	type:Qtree
fcomp	Makefile	/^fcomp = ifort$/;"	m
filenameIn	src/main.f90	/^    character(len=40) filenameIn$/;"	v	program:quadtree_main
filter3	src/Qtree_module.f90	/^    recursive subroutine filter3(/;"	s	module:Qtree_module
greater_equal_than	src/Point_Module.f90	/^    function greater_equal_than(/;"	f	module:point_module
greater_than	src/Point_Module.f90	/^    function greater_than(/;"	f	module:point_module
i	src/main.f90	/^    in/;"	v	program:quadtree_main
init	src/Geom_Module.f90	/^        logical :: init /;"	k	type:polygon
int_times_vector	src/Vector_Module.f90	/^        function int_times_vector(/;"	f	module:vector_module
intrsc_point	src/Point_Module.f90	/^type :: intrsc_point$/;"	t	module:intrsc_point_module
intrsc_point_module	src/Point_Module.f90	/^module intrsc_point_module$/;"	m
intrsc_points	src/Qtree_module.f90	/^    type(intrsc_point) :: intrsc_points(/;"	k	type:Qtree
intrsc_pt	src/Geom_Module.f90	/^    subroutine intrsc_pt(/;"	s	module:segment_module
intrsc_pt2	src/Geom_Module.f90	/^    subroutine intrsc_pt2(/;"	s	module:segment_module
intrsc_segment_polygon	src/Geom_Module.f90	/^    subroutine intrsc_segment_polygon(/;"	s	module:polygon_module
intrsc_segment_polygon_2	src/Geom_Module.f90	/^     subroutine intrsc_segment_polygon_2(/;"	s	module:polygon_module
iofile	src/module.for	/^      module iofile /;"	m
ior	src/module.for	/^      integer ior,/;"	v	module:iofile
iosave	src/module.for	/^      module iosave$/;"	m
iow	src/module.for	/^      integer ior,iow$/;"	v	module:iofile
ipos	src/helpers.for	/^      integer function ipos(/;"	f
isEmpty_	src/Qtree_module.f90	/^    logical function isEmpty_(/;"	f	module:Qtree_module
isQ_in	src/Qtree_module.f90	/^    logical function isQ_in(/;"	f	module:Qtree_module
istat	src/main.f90	/^    integer i, j, k, istat,/;"	v	program:quadtree_main
j	src/main.f90	/^    integer i, j,/;"	v	program:quadtree_main
just	src/helpers.for	/^      subroutine just(/;"	s
k	src/main.f90	/^    integer i, j, k,/;"	v	program:quadtree_main
kernel	src/Geom_Module.f90	/^        type(point), allocatable :: kernel(/;"	k	type:polygon
len	src/main.f90	/^    integer cnt, len,/;"	v	program:quadtree_main
less_equal_than	src/Point_Module.f90	/^    function less_equal_than(/;"	f	module:point_module
less_than	src/Point_Module.f90	/^    function less_than(/;"	f	module:point_module
level	src/Qtree_module.f90	/^    integer :: level /;"	k	type:Qtree
level_min	src/Qtree_input.f90	/^    integer :: level_min,/;"	v	module:Qtree_input
lfile	src/module.for	/^      integer lfile$/;"	v	module:iosave
lread	src/module.for	/^      logical lread,/;"	v	module:iosave
lsave	src/module.for	/^      logical lread,lsave$/;"	v	module:iosave
mat_nro	src/Geom_Module.f90	/^        integer :: mat_nro /;"	k	type:polygon
mat_nros	src/Qtree_module.f90	/^    integer :: mat_nros(/;"	k	type:Qtree
mate_zhl	src/Qtree_data.f90	/^    integer :: mate_zhl$/;"	v	module:Qtree_data
max_seed_Q	src/Qtree_input.f90	/^    integer :: level_min, max_seed_Q$/;"	v	module:Qtree_input
modList	Makefile	/^modList = src\/module.for src\/helpers.for$/;"	m
modList2	Makefile	/^modList2 = src\/Point_Module.f90  src\/Vector_Module.f90 src\/Geom_Module.f90 \\$/;"	m
modObj	Makefile	/^modObj = $(modList:.for=.o)$/;"	m
modObj2	Makefile	/^modObj2 = $(modList2:.f90=.o)$/;"	m
nearestCommonAncestor	src/Qtree_module.f90	/^    subroutine nearestCommonAncestor(/;"	s	module:Qtree_module
next	src/Qtree_module.f90	/^    type(QtreeNode), pointer :: next /;"	k	type:QtreeNode
nodes	src/Qtree_data.f90	/^    type(point), allocatable :: nodes(/;"	v	module:Qtree_data
nodes_mask	src/Qtree_data.f90	/^    logical, allocatable :: nodes_mask(/;"	v	module:Qtree_data
num_elem	src/Qtree_data.f90	/^    integer :: num_node, num_elem,/;"	v	module:Qtree_data
num_intrsc_points	src/Qtree_module.f90	/^    integer :: num_intrsc_points /;"	k	type:Qtree
num_intrsc_pts	src/Qtree_data.f90	/^    integer :: num_intrsc_pts$/;"	v	module:Qtree_data
num_mat_sets	src/Qtree_input.f90	/^    integer :: num_poly, num_seeds, num_mat_sets$/;"	v	module:Qtree_input
num_mat_sets	src/Qtree_module.f90	/^    integer :: num_mat_sets /;"	k	type:Qtree
num_node	src/Qtree_data.f90	/^    integer :: num_node,/;"	v	module:Qtree_data
num_nodes_elem	src/main.f90	/^    integer num_nodes_elem,/;"	v	program:quadtree_main
num_poly	src/Qtree_input.f90	/^    integer :: num_poly,/;"	v	module:Qtree_input
num_seeds	src/Qtree_input.f90	/^    integer :: num_poly, num_seeds,/;"	v	module:Qtree_input
num_vertices	src/Geom_Module.f90	/^        integer :: num_vertices /;"	k	type:polygon
orientation	src/Point_Module.f90	/^    function orientation(/;"	f	module:point_module
padd	src/helpers.for	/^      function padd(/;"	f
parexp	src/helpers.for	/^      subroutine parexp(/;"	s
pcharr	src/helpers.for	/^      subroutine pcharr(/;"	s
pcheck	src/helpers.for	/^      subroutine pcheck(/;"	s
pcomp	src/helpers.for	/^      logical function pcomp(/;"	f
pcomp	src/main.f90	/^    logical pcomp$/;"	v	program:quadtree_main
pconst	src/helpers.for	/^      subroutine pconst(/;"	s
pevpak	src/helpers.for	/^      subroutine pevpak(/;"	s
pfuncs	src/helpers.for	/^      subroutine pfuncs(/;"	s
pintio	src/helpers.for	/^      subroutine pintio(/;"	s
pinval	src/helpers.for	/^      subroutine pinval(/;"	s
point	src/Point_Module.f90	/^Type :: point /;"	t	module:point_module
point_in_polygonSR	src/Geom_Module.f90	/^    subroutine point_in_polygonSR /;"	s	module:polygon_module
point_module	src/Point_Module.f90	/^module point_module$/;"	m
point_to_array	src/Point_Module.f90	/^    subroutine  point_to_array(/;"	s	module:point_module
point_to_vector	src/Vector_Module.f90	/^        subroutine  point_to_vector(/;"	s	module:vector_module
polygon	src/Geom_Module.f90	/^    Type :: polygon$/;"	t	module:polygon_module
polygon_CCW_test	src/Geom_Module.f90	/^    function polygon_CCW_test(/;"	f	module:polygon_module
polygon_delete	src/Geom_Module.f90	/^    subroutine polygon_delete(/;"	s	module:polygon_module
polygon_dist	src/Geom_Module.f90	/^    subroutine polygon_dist(/;"	s	module:polygon_module
polygon_init	src/Geom_Module.f90	/^    subroutine polygon_init(/;"	s	module:polygon_module
polygon_kernel	src/Geom_Module.f90	/^    subroutine polygon_kernel(/;"	s	module:polygon_module
polygon_module	src/Geom_Module.f90	/^module polygon_module$/;"	m
polygons	src/Qtree_input.f90	/^    type(polygon), allocatable :: polygons(/;"	v	module:Qtree_input
polykernel	src/Geom_Module.f90	/^    subroutine polykernel(/;"	s	module:polygon_module
pop_	src/Qtree_module.f90	/^    subroutine pop_(/;"	s	module:Qtree_module
pos	src/Point_Module.f90	/^    type(point) :: pos$/;"	k	type:intrsc_point
pos	src/Point_Module.f90	/^    type(point) :: pos$/;"	k	type:seed_point
printPoints_	src/Qtree_module.f90	/^    subroutine printPoints_(/;"	s	module:Qtree_module
psub	src/helpers.for	/^      function psub(/;"	f
pt2pt_dist	src/Point_Module.f90	/^    function pt2pt_dist(/;"	f	module:point_module
pt2segm_dist	src/Geom_Module.f90	/^    function pt2segm_dist /;"	f	module:segment_module
pt_1	src/Geom_Module.f90	/^        type(point) :: pt_1$/;"	k	type:segment
pt_2	src/Geom_Module.f90	/^        type(point) :: pt_2$/;"	k	type:segment
pt_in_segment	src/Geom_Module.f90	/^    function pt_in_segment /;"	f	module:segment_module
quadtree_main	src/main.f90	/^program quadtree_main$/;"	p
readInputFile	src/main.f90	/^subroutine readInputFile(/;"	s
read_seeds	src/main.f90	/^subroutine read_seeds(/;"	s
real_times_vector	src/Vector_Module.f90	/^        function real_times_vector(/;"	f	module:vector_module
rectRectCollision	src/Qtree_module.f90	/^    logical function rectRectCollision(/;"	f	module:Qtree_module
ref	src/Qtree_module.f90	/^    integer :: ref(/;"	k	type:Qtree
refCornerNeighbourQ	src/Qtree_module.f90	/^    subroutine refCornerNeighbourQ(/;"	s	module:Qtree_module
refEdgeNeighbourQ	src/Qtree_module.f90	/^    subroutine refEdgeNeighbourQ(/;"	s	module:Qtree_module
region	src/main.f90	/^    integer num_nodes_elem, region$/;"	v	program:quadtree_main
right_cross	src/Geom_Module.f90	/^    function right_cross(/;"	f	module:polygon_module
savePoints_	src/Qtree_module.f90	/^    subroutine savePoints_(/;"	s	module:Qtree_module
sc_nodes	src/Qtree_data.f90	/^    type(point), allocatable :: nodes(:), temp_nodes(:), sc_nodes(/;"	v	module:Qtree_data
searchPoint	src/Qtree_module.f90	/^    subroutine searchPoint(/;"	s	module:Qtree_module
seed_point	src/Point_Module.f90	/^type :: seed_point$/;"	t	module:seed_point_module
seed_point_module	src/Point_Module.f90	/^module seed_point_module$/;"	m
seeds	src/Qtree_input.f90	/^    type(point), allocatable :: seeds(/;"	v	module:Qtree_input
seeds	src/Qtree_module.f90	/^    type(seed_point), allocatable :: seeds(/;"	k	type:Qtree
segment	src/Geom_Module.f90	/^    Type :: segment /;"	t	module:segment_module
segment_module	src/Geom_Module.f90	/^module segment_module /;"	m
setval	src/helpers.for	/^      subroutine setval(/;"	s
sides	src/Geom_Module.f90	/^        type(segment), allocatable :: sides(/;"	k	type:polygon
signo	src/Qtree_module.f90	/^    integer :: signo(/;"	k	type:Qtree
sortPolygonsSR	src/SortSearch_module.f90	/^subroutine sortPolygonsSR(/;"	s	module:SortSearch_module
splitQ	src/Qtree_module.f90	/^    logical function splitQ(/;"	f	module:Qtree_module
status	src/main.f90	/^    integer cnt, len, status$/;"	v	program:quadtree_main
subdivideQ	src/Qtree_module.f90	/^    subroutine subdivideQ /;"	s	module:Qtree_module
switch	Makefile	/^switch = -module  obj -w -f77rtl -standard-semantics  -O0  -init=zero -init=arrays -intconstant  -assume:byterecl -heap-arrays -g -check all -check noarg_temp_created -fpe0 -traceback -debug extended $/;"	m
temp_nodes	src/Qtree_data.f90	/^    type(point), allocatable :: nodes(:), temp_nodes(/;"	v	module:Qtree_data
token	src/main.f90	/^    character(len=5) token$/;"	v	program:quadtree_main
ucase	src/Qtree.f90	/^    subroutine ucase /;"	s
vector	src/Vector_Module.f90	/^    Type :: vector /;"	t	module:vector_module
vector_add_pv	src/Vector_Module.f90	/^        function vector_add_pv(/;"	f	module:vector_module
vector_add_vp	src/Vector_Module.f90	/^        function vector_add_vp(/;"	f	module:vector_module
vector_add_vv	src/Vector_Module.f90	/^        function vector_add_vv(/;"	f	module:vector_module
vector_div_int	src/Vector_Module.f90	/^       function vector_div_int(/;"	f	module:vector_module
vector_div_real	src/Vector_Module.f90	/^       function vector_div_real(/;"	f	module:vector_module
vector_module	src/Vector_Module.f90	/^module vector_module$/;"	m
vector_subtract_pp	src/Vector_Module.f90	/^        function vector_subtract_pp(/;"	f	module:vector_module
vector_subtract_vv	src/Vector_Module.f90	/^        function vector_subtract_vv(/;"	f	module:vector_module
vector_times_int	src/Vector_Module.f90	/^        function vector_times_int(/;"	f	module:vector_module
vector_times_real	src/Vector_Module.f90	/^        function vector_times_real(/;"	f	module:vector_module
vector_to_array	src/Vector_Module.f90	/^        subroutine  vector_to_array(/;"	s	module:vector_module
vector_to_point	src/Vector_Module.f90	/^        subroutine  vector_to_point(/;"	s	module:vector_module
vertex_concavity	src/Geom_Module.f90	/^    subroutine vertex_concavity /;"	s	module:polygon_module
vertices	src/Geom_Module.f90	/^        type(point), allocatable :: vertices(/;"	k	type:polygon
vvv	src/module.for	/^      real*8 vvv(/;"	v	module:conval
whichPoints	src/Qtree.f90	/^subroutine whichPoints(/;"	s
whichSeeds	src/Qtree.f90	/^subroutine whichSeeds(/;"	s
wpoly	src/Point_Module.f90	/^    integer :: wpoly$/;"	k	type:intrsc_point
wpoly	src/Point_Module.f90	/^    integer :: wpoly$/;"	k	type:seed_point
wpoly	src/Qtree_module.f90	/^    integer :: wpoly(/;"	k	type:Qtree
writeFeapInputFile	src/main.f90	/^subroutine writeFeapInputFile(/;"	s
writeInputFileForMFEM	src/main.f90	/^subroutine writeInputFileForMFEM(/;"	s
write_seeds	src/Qtree.f90	/^    subroutine write_seeds(/;"	s
wside	src/Point_Module.f90	/^    integer :: wside$/;"	k	type:intrsc_point
www	src/module.for	/^      real*8 vvv(26,0:36),www(/;"	v	module:conval
x	src/Point_Module.f90	/^    real*8 :: x$/;"	k	type:point
x	src/Vector_Module.f90	/^        real*8 :: x$/;"	k	type:vector
xmax	src/Geom_Module.f90	/^        real*8 :: xmin, xmax,/;"	k	type:polygon
xmin	src/Geom_Module.f90	/^        real*8 :: xmin,/;"	k	type:polygon
xxx	src/main.f90	/^    character cc*4, yyy*80, xxx*/;"	v	program:quadtree_main
y	src/Point_Module.f90	/^    real*8 :: y$/;"	k	type:point
y	src/Vector_Module.f90	/^        real*8 :: y$/;"	k	type:vector
ymax	src/Geom_Module.f90	/^        real*8 :: xmin, xmax, ymin, ymax$/;"	k	type:polygon
ymin	src/Geom_Module.f90	/^        real*8 :: xmin, xmax, ymin,/;"	k	type:polygon
yyy	src/main.f90	/^    character cc*4, yyy*/;"	v	program:quadtree_main
zhl	src/main.f90	/^    integer i, j, k, istat, zhl$/;"	v	program:quadtree_main
